name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  check-skip:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

  assign_pr_owner:
    runs-on: ubuntu-latest
    steps:
      - name: Assign PR to creator
        uses: thomaseizinger/assign-pr-creator-action@v1.0.0
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: Build dependencies
        run: |
          npm run phoenix:ci
          npm run install:themes
          npm run build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          name: public-folder
          path: public

  testing:
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.set-report.outputs.coverage }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install xvfb for headless testing
        run: sudo apt-get install xvfb

      - name: Setup Max User Watches for Testing
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Testing
        run: |
          npm run phoenix:ci
          npm run lint
          xvfb-run --auto-servernum npm run test -- --ci --coverage
      - name: Comment Test Coverage
        uses: AthleticNet/comment-test-coverage@1.1
        if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: coverage/coverage.json
          title: Test Coverage results
      - name: Outputs the coverage
        #if: github.event_name == 'push'
        id: set-report
        run: |
          COVERAGE=`cat ./coverage/coverage.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=coverage::$COVERAGE"

  release:
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: ECHO coverage report
        #if: github.event_name == 'push'
        run: echo "${{(needs.testing.outputs.coverage)}}"
      - name: Get the coverage report
        #if: github.event_name == 'push'
        run: echo "${{fromJson(needs.testing.outputs.coverage)}}"
      - name: Release components
        run: |
          npm install @s-ui/mono@2 --no-audit --no-optional --no-fund
          npx @s-ui/ci release
        env:
          GITHUB_EMAIL: cloud-accounts@scmspain.com
          GITHUB_TOKEN: ${{github.token}}
          GITHUB_USER: sui-bot
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy:
    needs: [build, testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/download-artifact@v2
        with:
          name: public-folder
      - name: Deploy
        id: deploy
        run: |
          npm i -g vercel --no-save --no-fund --no-audit --no-optional --no-scripts
          DEPLOYMENT_URL=$(vercel --token $VERCEL_TOKEN --confirm $VERCEL_PARAMS)
          echo "::set-output name=url::$(echo $DEPLOYMENT_URL)"
        env:
          VERCEL_PARAMS: ${{ github.event_name != 'pull_request' && '--prod' || ''}}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    environment:
      name: ${{ github.event_name != 'pull_request' && 'Production' || 'Preview'}}
      url: ${{ steps.deploy.outputs.url }}
