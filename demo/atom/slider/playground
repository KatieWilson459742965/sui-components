const stylesSection = {
  border: '1px solid #CCC',
  background: '#fff',
  margin: '40px 0',
  padding: '30px 10px'
}

const numberWithCommas = function(x) {
  return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".")
}

const SliderWithState = () => {
  const [stateValue, setStateValue] =  React.useState()
  const _handleChange = (e, {value}) => {
    console.log(value)
    setStateValue(value)
  }
  return <AtomSlider value={stateValue} onChange={_handleChange} valueLabel hideTooltip />

}

return (
  <div>
    <h1>AtomSlider</h1>
    <h2>Segmented</h2>
    <h3>Basic</h3>
    <div style={stylesSection}>
      <AtomSlider onChange={console.log}/>
    </div>
    <h2>Value as label and state</h2>
    <div style={stylesSection}>
      <SliderWithState />
    </div>
    <div style={stylesSection}>
      <AtomSlider step={25} value={50} onChange={console.log}/>
    </div>
    <h3>Disabled</h3>
    <div style={stylesSection}>
      <AtomSlider step={25} value={25} disabled onChange={console.log}/>
    </div>
    <h2>Range</h2>
    <h3>Basic</h3>
    <div style={stylesSection}>
      <AtomSlider range onChange={console.log}/>
    </div>
    <h3>Step 10</h3>
    <div style={stylesSection}>
      <AtomSlider range step={10} onChange={console.log}/>
    </div>
    <h3>With default value</h3>
    <div style={stylesSection}>
      <AtomSlider range step={10} onChange={console.log} defaultValue={[0, 30]}/>
    </div>
    <h2>Value as label</h2>
    <div style={stylesSection}>
      <AtomSlider onChange={console.log} valueLabel hideTooltip />
    </div>
    <div style={stylesSection}>
      <AtomSlider onChange={console.log} step={1000} max={5000} valueLabel valueLabelFormatter={numberWithCommas} hideTooltip />
    </div>
    <h2>Custom Marks</h2>
    <div style={stylesSection}>
      <AtomSlider onChange={console.log} max={6} range marks={[0, 1, 2, 3, 4, 5, '+10']} hideTooltip/>
    </div>
    <div style={stylesSection}>
      <AtomSlider onChange={console.log} min={6000} max={60000} step={1000} valueLabel valueLabelFormatter={numberWithCommas} marks={['6K', '+60K']} hideTooltip />
    </div>
    <h3>Range with After Change callback</h3>
    <div style={stylesSection}>
      <AtomSlider range step={10} onAfterChange={console.log}/>
    </div>
    <h3>Slider with After Change callback</h3>
    <div style={stylesSection}>
      <AtomSlider  step={10} onAfterChange={console.log}/>
    </div>
    <h3>Slider with inverse colors</h3>
    <div style={stylesSection}>
      <AtomSlider  step={10} onChange={console.log} invertColors/>
    </div>
  </div>
)
