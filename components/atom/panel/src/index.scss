@import '~@s-ui/theme/lib/index';

$bdrs-atom-panel-rounded: (
  'm': $bdrs-m,
  'l': $bdrs-m * 2,
  'xl': $bdrs-m * 3
) !default;
$bxsh-atom-panel-elevation: (
  's': $bxsh-s,
  'm': $bxsh-m,
  'l': $bxsh-l
) !default;
$bgc-atom-panel: color-variation($c-gray, -2) !default;
$bgc-panels: (
  'canvas': $c-white,
  'contrast': $c-black,
  'accent': $c-accent,
  'corporate': $c-primary,
  'base': color-variation($c-gray, 3),
  'dark': color-variation($c-gray, -1),
  'default': $c-gray-lightest,
  'highlight': color-variation($c-accent, 4),
  'success': $c-success,
  'alert': $c-alert,
  'error': $c-error
) !default;
$c-atom-panel: $c-black !default;
$horizontal-alignments-atom-panel: ('left', 'center', 'right') !default;
$vertical-alignments-atom-panel: ('top', 'center', 'bottom') !default;

%sui-atom-panel-image {
  background-color: $bgc-atom-panel; //default bg color
  background-repeat: no-repeat;
}

.sui-atom-panel {
  @each $type, $attr in $bdrs-atom-panel-rounded {
    &--rounded-#{$type} {
      border-radius: $attr;
    }
  }

  @each $type, $attr in $bxsh-atom-panel-elevation {
    &--elevation-#{$type} {
      box-shadow: $attr;
    }
  }

  &-content {
    position: relative;
  }

  @each $type, $attr in $bgc-panels {
    &--#{$type} {
      @include bgcolor-overlay-opacity($attr);
    }
  }

  &-color {
    @each $type, $attr in $bgc-panels {
      &--#{$type} {
        @include bgcolor-opacity($attr);
      }
    }
  }

  &-image {
    @extend %sui-atom-panel-image;

    &--resized {
      background-size: cover;
    }

    @each $alignment in $horizontal-alignments-atom-panel {
      &--horizontal-#{$alignment} {
        @extend %sui-atom-panel-image;
        background-position-x: #{$alignment};
      }
    }

    @each $alignment in $vertical-alignments-atom-panel {
      &--vertical-#{$alignment} {
        @extend %sui-atom-panel-image;
        background-position-y: #{$alignment};
      }
    }
  }
}
